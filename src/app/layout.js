import { Inter } from "next/font/google";
import "./globals.css";
import Navbar from '@/components/navBar'; // Corrected import path
import Head from 'next/head';
import Script from 'next/script';

const inter = Inter({ subsets: ["latin"] });

export const metadata = {
  title: "Informed AI - Your buying agent",
  description: "Generated by create next app",
};

export default function RootLayout({ children }) {
  return (
    <html lang="en">
      <Head>
        <title>Informed AI - Your buying agent</title>
        <meta name="description" content="Get all the insights and data you need to make confident decisions on sales tools—no salespeople required." /> 
        <meta name="keywords" content="B2B SaaS, AI buyer, sales tools" />
        <meta property="og:title" content="Informed AI - Your buying agent" />
        <meta property="og:description" content="Get all the insights and data you need to make confident decisions on sales tools—no salespeople required." /> 
        <meta property="og:image" content="URL to your image" /> 
        <meta property="og:url" content="URL to your page" /> 
        <meta name="twitter:card" content="summary_large_image" /> 
        <meta name="twitter:title" content="Informed AI - Your buying agent" /> 
        <meta name="twitter:description" content="Get all the insights and data you need to make confident decisions on sales tools—no salespeople required." /> 
        <meta name="twitter:image" content="URL to your image" />
      </Head>
      <body className={inter.className}>
        <Navbar />
        {children}
        <Script id="reb2b-script" strategy="afterInteractive">
          {`!function () {
            var reb2b = window.reb2b = window.reb2b || [];
            if (reb2b.invoked) return;
            reb2b.invoked = true;
            reb2b.methods = ["identify", "collect"];
            reb2b.factory = function (method) {
              return function () {
                var args = Array.prototype.slice.call(arguments);
                args.unshift(method);
                reb2b.push(args);
                return reb2b;
              };
            };
            for (var i = 0; i < reb2b.methods.length; i++) {
              var key = reb2b.methods[i];
              reb2b[key] = reb2b.factory(key);
            }
            reb2b.load = function (key) {
              var script = document.createElement("script");
              script.type = "text/javascript";
              script.async = true;
              script.src = "https://s3-us-west-2.amazonaws.com/b2bjsstore/b/" + key + "/reb2b.js.gz";
              var first = document.getElementsByTagName("script")[0];
              first.parentNode.insertBefore(script, first);
            };
            reb2b.SNIPPET_VERSION = "1.0.1";
            reb2b.load("0NW1GH75K5O4");
          }();`}
        </Script>
      </body>
    </html>
  );
}
